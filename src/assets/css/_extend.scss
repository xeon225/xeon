@import "variables";
@import "lib/function";
// layout
@for $i from 0 through $layoutNumber{
	%margin#{$i * 10}{margin:getLayoutSize($i,1)}
	%margint#{$i * 10}{margin-top:getLayoutSize($i,1)}
	%marginb#{$i * 10}{margin-bottom:getLayoutSize($i,1)}
	%marginl#{$i * 10}{margin-left:getLayoutSize($i,1)}
	%marginr#{$i * 10}{margin-right:getLayoutSize($i,1)}
	%margint-n#{$i * 10}{margin-top:getLayoutSize($i,-1)}
	%marginb-n#{$i * 10}{margin-bottom:getLayoutSize($i,-1)}
	%marginl-n#{$i * 10}{margin-left:getLayoutSize($i,-1)}
	%marginr-n#{$i * 10}{margin-right:getLayoutSize($i,-1)}
	%marginh#{$i * 10}{@extend %marginl#{$i * 10};@extend %marginr#{$i * 10}}
	%marginv#{$i * 10}{@extend %margint#{$i * 10};@extend %marginb#{$i * 10}}	
	%padding#{$i * 10}{padding:getLayoutSize($i,1)}
	%paddingt#{$i * 10}{padding-top:getLayoutSize($i,1)}
	%paddingb#{$i * 10}{padding-bottom:getLayoutSize($i,1)}
	%paddingl#{$i * 10}{padding-left:getLayoutSize($i,1)}
	%paddingr#{$i * 10}{padding-right:getLayoutSize($i,1)}
	%paddingh#{$i * 10}{@extend %paddingl#{$i * 10};@extend %paddingr#{$i * 10}}
	%paddingv#{$i * 10}{@extend %paddingt#{$i * 10};@extend %paddingb#{$i * 10}}
	%top#{$i * 10}{top:getLayoutSize($i,1)}
	%right#{$i * 10}{right:getLayoutSize($i,1)}
	%left#{$i * 10}{left:getLayoutSize($i,1)}
	%bottom#{$i * 10}{bottom:#{getLayoutSize($i,1)}}
	%top-n#{$i * 10}{top:getLayoutSize($i,-1)}
	%right-n#{$i * 10}{right:getLayoutSize($i,-1)}
	%left-n#{$i * 10}{left:getLayoutSize($i,-1)}
	%bottom-n#{$i * 10}{bottom:getLayoutSize($i,-1)}
}
%flex-container{
	@include display-flex();
	@include align-items();
	@include justify-content();
	&%round{@include justify-content(space-around); }
	&%center{@include justify-content(center); }
	&%left{@include justify-content(flex-start); }
	&%right{@include justify-content(flex-end); }
	&%top{@include align-items(flex-start) }
	&%line{@include align-items(baseline) }
	&%bottom{@include align-items(flex-end) }
	&%vfull{@include align-items(stretch) }
	&%hfull{&>*{@include flex(); } }
	&%leftCenter{@include justify-content(flex-start);}
	&%leftTop{@include justify-content(flex-start);@include align-items(flex-start);}
	&%leftBottom{@include justify-content(flex-start);@include align-items(flex-end)}
	&%leftLine{@include justify-content(flex-start);@include align-items(baseline);}
	&%rightCenter{@include justify-content(flex-end);}
	&%rightTop{@include justify-content(flex-end);@include align-items(flex-start);}
	&%rightBottom{@include justify-content(flex-end);@include align-items(flex-end);}
	&%rightLine{@include justify-content(flex-end);@include align-items(baseline);}
	&%topRound{@include justify-content(space-around);@include align-items(flex-start);}
	&%bottomRound{@include justify-content(space-around);@include align-items(flex-end);}
}
%flex-container-col{
	@extend %flex-container;
	@include flex-direction();
	&%round{@include justify-content(space-around); }
	&%center{@include justify-content(center); }
	&%left{@include align-items(flex-start); }
	&%right{@include align-items(flex-end); }
	&%top{@include justify-content(flex-start); }
	&%bottom{@include justify-content(flex-end); }
	&%vfull{&>*{@include flex(); } }
	&%hfull{@include align-items(stretch) }
	&%leftCenter{@include align-items(flex-start);@include justify-content(center);}
	&%leftTop{@include align-items(flex-start);@include justify-content(flex-start);}
	&%leftBottom{@include align-items(flex-start);@include justify-content(flex-end);}
	&%rightCenter{@include align-items(flex-end);@include justify-content(center);}
	&%rightTop{@include align-items(flex-end);@include justify-content(flex-start);}
	&%rightBottom{@include align-items(flex-end);@include justify-content(flex-end);}
	&>span{
		display:block;
	}
}
@for $i from 1 through $layoutNumber{
	%flex-grow#{$i}{flex-grow:$i}
	%flex#{$i}{flex:$i}
}
@for $i from 0 through 20{
	%flex-basis#{$i * 5}{flex-basis:($i * 5) * 1%}
}
// button
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  @if($isPC){
    &:focus{
      color: $color;
      background-color: darken($background, 10%);
          border-color: darken($border, 25%);
    }
    &:hover {
      color: $color;
      background-color: darken($background, 10%);
          border-color: darken($border, 12%);
    }
    &:active
    {
      color: $color;
      background-color: darken($background, 10%);
          border-color: darken($border, 12%);

      &:hover,
      &:focus{
        color: $color;
        background-color: darken($background, 17%);
            border-color: darken($border, 25%);
      }
    }
    &:active
    {
      background-image: none;
    }
  }
}
@mixin button-size($height, $padding-horizontal, $font-size) {
  padding: ($height - 26px - 2) / 2 $padding-horizontal;
  font-size: $font-size;
}
%btn {
  display: inline-block;
  margin-bottom: 0; 
  font-weight: 400;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; 
  border: 1px solid transparent;
  white-space: nowrap;
  line-height:26px;
  @include button-variant(map-get($grayList,'dark'), #eceeef, map-get($grayList,'lighter'));
  @include button-size(nth(map-get($btn-size-list,'base'),1),nth(map-get($btn-size-list,'base'),2),nth(map-get($btn-size-list,'base'),3));
  @include user-select(none);
  @if($isPC){
    &,
    &:active{
      &:focus{
        @include tab-focus;
      }
    }
  }
  &%radius{
    border-radius: $border-radius-base;
  }
  &%reverse{
    @include button-variant(map-get($grayList,'dark'), white, map-get($grayList,'lighter'));
  }
  @if($isPC){
    &:hover,
    &:focus{
      color: map-get($grayList,'darker');
      text-decoration: none;
    }

    &:active{
      outline: 0;
      background-image: none;
      @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
    }
  }
}
@each $btnSizeName,$btnSizeValue in $btn-size-list{
  @if(#{$btnSizeName}!='base'){
    %btn%#{$btnSizeName}{
      @include button-size(nth($btnSizeValue,1),nth($btnSizeValue,2),nth($btnSizeValue,3));
    }
  }
}
@each $colorName,$colorValue in $bg_colorList{
  %btn%#{$colorName}{
    @include button-variant(white, $colorValue, $colorValue);
    &%btn-reverse,&%reverse{
      @include button-variant(map-get($colorList,#{$colorName}), white, $colorValue);
    }
  }
}
// badge
@mixin badgeSize($height,$paddingh,$fontSize){
  min-width: $height;
  padding: ($height - $fontSize) / 2 $paddingh;
  font-size: $fontSize;
  &%reverse{
    padding: (($height - $fontSize) / 2) - 1 ($paddingh - 1);
  }
  &%round,&%square{
    width: $height;
    padding-left: 0;
    padding-right: 0;
    overflow: hidden;
  }
}
%badge{
  display: inline-block;
  @include badgeSize(nth(map-get($badge-size-list,'base'),1),nth(map-get($badge-size-list,'base'),2),nth(map-get($badge-size-list,'base'),3));
  color: map-get($grayList,'darker');
  line-height: 1;
  vertical-align: middle;
  white-space: nowrap;
  text-align: center;
  color:white;
  background-color: map-get($grayList,'lighter');
  position: relative;
  &:empty {
    display: none;
  }
  &%reverse{
    background-color: white;
    color:map-get($grayList,'dark');
    border:1px solid map-get($grayList,'lighter');
  }
  &%round{
    border-radius:50%;
    padding-left:0;
    padding-right:0;
    overflow: hidden;
  }
  &%round%reverse{
    padding-left:0;
    padding-right:0;
  }
  &%radius{
    border-radius: 3px;
  }
  &%pill{
    border-radius:500px;
  }
  &%flag{
    &:before{
      content: '';
      display: block;
      position: absolute;
      left: 6px;
      bottom: -6px;
      height: 0;
      width: 0;
      border: 6px solid transparent;
      transform: rotate(135deg);
      margin-left: -3px;
    }
    &%reverse,&%round,&%radius{
      &:before{
        display: none;
      }
    }
  }
  @each $colorName,$colorValue in $bg_colorList{
      &#{&-#{$colorName}},&%#{$colorName}{
        background-color:$colorValue;
      }
      &#{&}-flag#{&-#{$colorName}},&%flag%#{$colorName}{
        &:before{
          border-right-color: darken($colorValue,10%);
        }
      }
      &#{&}-reverse#{&-#{$colorName}},&%reverse%#{$colorName}{
        background-color:white;
        border:1px solid map-get($colorList,#{$colorName});
        color:map-get($colorList,#{$colorName});
      }
  }
}
@each $btnSizeName,$btnSizeValue in $badge-size-list{
  @if($btnSizeName!='base'){
    %badge%#{$btnSizeName}{
      @include badgeSize(nth($btnSizeValue,1),nth($btnSizeValue,2),nth($btnSizeValue,3));
    }
  }
}